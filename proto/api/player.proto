syntax = "proto3";

package player;

option go_package = "github.com/dstgo/wigfrid/pb;pb";

import "result.proto";
import "daemon.proto";
import "dst.proto";

message PlayerInfo {
  // steam user id
  uint64 steamId = 1;
  // klei user id
  string kid = 2;
  // dst player name, same as steam user name normally
  string name = 3;
  // dst role the player played, like wilson, wendy
  string role = 4;
  // if is server admin
  bool admin = 5;
}

message BasicPlayerInfo {
  // klei user id
  string kid = 2;
  // dst player name, same as steam user name normally
  string name = 3;
}

// server player information
message PlayerStatisticInfo {
  int64 total = 1;
  int64 online = 2;
  int64 masterOnline = 3;
  int64 caveOnline = 4;

  repeated PlayerInfo masterOnlinePlayer = 6;
  repeated PlayerInfo caveOnlinePlayer = 7;
}

// server shard log player message
message LogMessage {
  string time = 1;
  // message event, eg. say, whisper, announcement
  string event = 2;
  string msg = 3;
}

message PlayerChatLog {
  repeated LogMessage messages = 1;
}

// Player operation
enum PlayerOperation {
  // kill a specific online player
  Kill = 0;
  // kick a specific online player from the server
  Kick = 1;
  // make the specific online player change his role
  ReRole = 2;
  /// make the specific dead player reborn
  ReBorn = 3;
}

message ExecutePlayerReq {
  daemon.ContainerId instanceId = 1;
  dst.KleiID kid = 2;
  PlayerOperation op = 3;
}

message PlayerListReq {
  daemon.ContainerId instanceId = 1;
  dst.KleiID kid = 2;
}

message PlayerListResp {
  repeated BasicPlayerInfo list = 1;
}

// Dst server player service
service PlayerService {
  rpc GetPlayerStats(daemon.ContainerId) returns(PlayerStatisticInfo);
  rpc GetPlayerChatLog(daemon.ContainerId) returns(PlayerChatLog);
  rpc ExecutePlayer(ExecutePlayerReq) returns(result.Notify);

  rpc GetWhiteList(daemon.ContainerId) returns(PlayerListResp);
  rpc GetBlackList(daemon.ContainerId) returns(PlayerListResp);
  rpc GetAdminList(daemon.ContainerId) returns(PlayerListResp);

  rpc AddWhiteList(PlayerListReq) returns(result.Notify);
  rpc AddBlackList(PlayerListReq) returns(result.Notify);
  rpc AddAdminList(PlayerListReq) returns(result.Notify);

  rpc RemoveWhiteList(PlayerListReq) returns(result.Notify);
  rpc RemoveBlackList(PlayerListReq) returns(result.Notify);
  rpc RemoveAdminList(PlayerListReq) returns(result.Notify);
}