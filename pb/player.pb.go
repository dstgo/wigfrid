// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: player.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Player operation
type PlayerOperation int32

const (
	// kill a specific online player
	PlayerOperation_Kill PlayerOperation = 0
	// kick a specific online player from the server
	PlayerOperation_Kick PlayerOperation = 1
	// make the specific online player change his role
	PlayerOperation_ReRole PlayerOperation = 2
	// / make the specific dead player reborn
	PlayerOperation_ReBorn PlayerOperation = 3
)

// Enum value maps for PlayerOperation.
var (
	PlayerOperation_name = map[int32]string{
		0: "Kill",
		1: "Kick",
		2: "ReRole",
		3: "ReBorn",
	}
	PlayerOperation_value = map[string]int32{
		"Kill":   0,
		"Kick":   1,
		"ReRole": 2,
		"ReBorn": 3,
	}
)

func (x PlayerOperation) Enum() *PlayerOperation {
	p := new(PlayerOperation)
	*p = x
	return p
}

func (x PlayerOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_player_proto_enumTypes[0].Descriptor()
}

func (PlayerOperation) Type() protoreflect.EnumType {
	return &file_player_proto_enumTypes[0]
}

func (x PlayerOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerOperation.Descriptor instead.
func (PlayerOperation) EnumDescriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// steam user id
	SteamId uint64 `protobuf:"varint,1,opt,name=steamId,proto3" json:"steamId,omitempty"`
	// klei user id
	Kid string `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	// dst player name, same as steam user name normally
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// dst role the player played, like wilson, wendy
	Role string `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	// if is server admin
	Admin bool `protobuf:"varint,5,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerInfo) GetSteamId() uint64 {
	if x != nil {
		return x.SteamId
	}
	return 0
}

func (x *PlayerInfo) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *PlayerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *PlayerInfo) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type BasicPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// klei user id
	Kid string `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	// dst player name, same as steam user name normally
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BasicPlayerInfo) Reset() {
	*x = BasicPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicPlayerInfo) ProtoMessage() {}

func (x *BasicPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicPlayerInfo.ProtoReflect.Descriptor instead.
func (*BasicPlayerInfo) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{1}
}

func (x *BasicPlayerInfo) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *BasicPlayerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// server player information
type PlayerStatisticInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total              int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Online             int64         `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	MasterOnline       int64         `protobuf:"varint,3,opt,name=masterOnline,proto3" json:"masterOnline,omitempty"`
	CaveOnline         int64         `protobuf:"varint,4,opt,name=caveOnline,proto3" json:"caveOnline,omitempty"`
	MasterOnlinePlayer []*PlayerInfo `protobuf:"bytes,6,rep,name=masterOnlinePlayer,proto3" json:"masterOnlinePlayer,omitempty"`
	CaveOnlinePlayer   []*PlayerInfo `protobuf:"bytes,7,rep,name=caveOnlinePlayer,proto3" json:"caveOnlinePlayer,omitempty"`
}

func (x *PlayerStatisticInfo) Reset() {
	*x = PlayerStatisticInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStatisticInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatisticInfo) ProtoMessage() {}

func (x *PlayerStatisticInfo) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatisticInfo.ProtoReflect.Descriptor instead.
func (*PlayerStatisticInfo) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerStatisticInfo) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PlayerStatisticInfo) GetOnline() int64 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *PlayerStatisticInfo) GetMasterOnline() int64 {
	if x != nil {
		return x.MasterOnline
	}
	return 0
}

func (x *PlayerStatisticInfo) GetCaveOnline() int64 {
	if x != nil {
		return x.CaveOnline
	}
	return 0
}

func (x *PlayerStatisticInfo) GetMasterOnlinePlayer() []*PlayerInfo {
	if x != nil {
		return x.MasterOnlinePlayer
	}
	return nil
}

func (x *PlayerStatisticInfo) GetCaveOnlinePlayer() []*PlayerInfo {
	if x != nil {
		return x.CaveOnlinePlayer
	}
	return nil
}

// server shard log player message
type LogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// message event, eg. say, whisper, announcement
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Msg   string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{3}
}

func (x *LogMessage) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *LogMessage) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *LogMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PlayerChatLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*LogMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *PlayerChatLog) Reset() {
	*x = PlayerChatLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerChatLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerChatLog) ProtoMessage() {}

func (x *PlayerChatLog) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerChatLog.ProtoReflect.Descriptor instead.
func (*PlayerChatLog) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerChatLog) GetMessages() []*LogMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ExecutePlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId *ContainerId    `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Kid        *KleiID         `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	Op         PlayerOperation `protobuf:"varint,3,opt,name=op,proto3,enum=player.PlayerOperation" json:"op,omitempty"`
}

func (x *ExecutePlayerReq) Reset() {
	*x = ExecutePlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutePlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutePlayerReq) ProtoMessage() {}

func (x *ExecutePlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutePlayerReq.ProtoReflect.Descriptor instead.
func (*ExecutePlayerReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{5}
}

func (x *ExecutePlayerReq) GetInstanceId() *ContainerId {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *ExecutePlayerReq) GetKid() *KleiID {
	if x != nil {
		return x.Kid
	}
	return nil
}

func (x *ExecutePlayerReq) GetOp() PlayerOperation {
	if x != nil {
		return x.Op
	}
	return PlayerOperation_Kill
}

type PlayerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId *ContainerId `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Kid        *KleiID      `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *PlayerListReq) Reset() {
	*x = PlayerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerListReq) ProtoMessage() {}

func (x *PlayerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerListReq.ProtoReflect.Descriptor instead.
func (*PlayerListReq) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerListReq) GetInstanceId() *ContainerId {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *PlayerListReq) GetKid() *KleiID {
	if x != nil {
		return x.Kid
	}
	return nil
}

type PlayerListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*BasicPlayerInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PlayerListResp) Reset() {
	*x = PlayerListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerListResp) ProtoMessage() {}

func (x *PlayerListResp) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerListResp.ProtoReflect.Descriptor instead.
func (*PlayerListResp) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerListResp) GetList() []*BasicPlayerInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_player_proto protoreflect.FileDescriptor

var file_player_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x1a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x09, 0x64, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x37, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8b,
	0x02, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x76, 0x65,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61,
	0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x12, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x10,
	0x63, 0x61, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x61, 0x76, 0x65,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3f, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x64, 0x73, 0x74, 0x2e, 0x4b, 0x6c, 0x65, 0x69, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x63, 0x0a, 0x0d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64,
	0x73, 0x74, 0x2e, 0x4b, 0x6c, 0x65, 0x69, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x22, 0x3d,
	0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x2a, 0x3d, 0x0a,
	0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x69,
	0x63, 0x6b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x42, 0x6f, 0x72, 0x6e, 0x10, 0x03, 0x32, 0xd8, 0x05, 0x0a,
	0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x13, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x39, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3b, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x41,
	0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x38, 0x0a, 0x0f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x38, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x38, 0x0a,
	0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x73, 0x74, 0x67, 0x6f, 0x2f, 0x77, 0x69, 0x67, 0x66,
	0x72, 0x69, 0x64, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_player_proto_rawDescOnce sync.Once
	file_player_proto_rawDescData = file_player_proto_rawDesc
)

func file_player_proto_rawDescGZIP() []byte {
	file_player_proto_rawDescOnce.Do(func() {
		file_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_proto_rawDescData)
	})
	return file_player_proto_rawDescData
}

var file_player_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_player_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_player_proto_goTypes = []interface{}{
	(PlayerOperation)(0),        // 0: player.PlayerOperation
	(*PlayerInfo)(nil),          // 1: player.PlayerInfo
	(*BasicPlayerInfo)(nil),     // 2: player.BasicPlayerInfo
	(*PlayerStatisticInfo)(nil), // 3: player.PlayerStatisticInfo
	(*LogMessage)(nil),          // 4: player.LogMessage
	(*PlayerChatLog)(nil),       // 5: player.PlayerChatLog
	(*ExecutePlayerReq)(nil),    // 6: player.ExecutePlayerReq
	(*PlayerListReq)(nil),       // 7: player.PlayerListReq
	(*PlayerListResp)(nil),      // 8: player.PlayerListResp
	(*ContainerId)(nil),         // 9: daemon.ContainerId
	(*KleiID)(nil),              // 10: dst.KleiID
	(*Notify)(nil),              // 11: result.Notify
}
var file_player_proto_depIdxs = []int32{
	1,  // 0: player.PlayerStatisticInfo.masterOnlinePlayer:type_name -> player.PlayerInfo
	1,  // 1: player.PlayerStatisticInfo.caveOnlinePlayer:type_name -> player.PlayerInfo
	4,  // 2: player.PlayerChatLog.messages:type_name -> player.LogMessage
	9,  // 3: player.ExecutePlayerReq.instanceId:type_name -> daemon.ContainerId
	10, // 4: player.ExecutePlayerReq.kid:type_name -> dst.KleiID
	0,  // 5: player.ExecutePlayerReq.op:type_name -> player.PlayerOperation
	9,  // 6: player.PlayerListReq.instanceId:type_name -> daemon.ContainerId
	10, // 7: player.PlayerListReq.kid:type_name -> dst.KleiID
	2,  // 8: player.PlayerListResp.list:type_name -> player.BasicPlayerInfo
	9,  // 9: player.PlayerService.GetPlayerStats:input_type -> daemon.ContainerId
	9,  // 10: player.PlayerService.GetPlayerChatLog:input_type -> daemon.ContainerId
	6,  // 11: player.PlayerService.ExecutePlayer:input_type -> player.ExecutePlayerReq
	9,  // 12: player.PlayerService.GetWhiteList:input_type -> daemon.ContainerId
	9,  // 13: player.PlayerService.GetBlackList:input_type -> daemon.ContainerId
	9,  // 14: player.PlayerService.GetAdminList:input_type -> daemon.ContainerId
	7,  // 15: player.PlayerService.AddWhiteList:input_type -> player.PlayerListReq
	7,  // 16: player.PlayerService.AddBlackList:input_type -> player.PlayerListReq
	7,  // 17: player.PlayerService.AddAdminList:input_type -> player.PlayerListReq
	7,  // 18: player.PlayerService.RemoveWhiteList:input_type -> player.PlayerListReq
	7,  // 19: player.PlayerService.RemoveBlackList:input_type -> player.PlayerListReq
	7,  // 20: player.PlayerService.RemoveAdminList:input_type -> player.PlayerListReq
	3,  // 21: player.PlayerService.GetPlayerStats:output_type -> player.PlayerStatisticInfo
	5,  // 22: player.PlayerService.GetPlayerChatLog:output_type -> player.PlayerChatLog
	11, // 23: player.PlayerService.ExecutePlayer:output_type -> result.Notify
	8,  // 24: player.PlayerService.GetWhiteList:output_type -> player.PlayerListResp
	8,  // 25: player.PlayerService.GetBlackList:output_type -> player.PlayerListResp
	8,  // 26: player.PlayerService.GetAdminList:output_type -> player.PlayerListResp
	11, // 27: player.PlayerService.AddWhiteList:output_type -> result.Notify
	11, // 28: player.PlayerService.AddBlackList:output_type -> result.Notify
	11, // 29: player.PlayerService.AddAdminList:output_type -> result.Notify
	11, // 30: player.PlayerService.RemoveWhiteList:output_type -> result.Notify
	11, // 31: player.PlayerService.RemoveBlackList:output_type -> result.Notify
	11, // 32: player.PlayerService.RemoveAdminList:output_type -> result.Notify
	21, // [21:33] is the sub-list for method output_type
	9,  // [9:21] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_player_proto_init() }
func file_player_proto_init() {
	if File_player_proto != nil {
		return
	}
	file_result_proto_init()
	file_daemon_proto_init()
	file_dst_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStatisticInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerChatLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutePlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_proto_goTypes,
		DependencyIndexes: file_player_proto_depIdxs,
		EnumInfos:         file_player_proto_enumTypes,
		MessageInfos:      file_player_proto_msgTypes,
	}.Build()
	File_player_proto = out.File
	file_player_proto_rawDesc = nil
	file_player_proto_goTypes = nil
	file_player_proto_depIdxs = nil
}
