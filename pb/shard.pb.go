// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: shard.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlTarget int32

const (
	ControlTarget_Master ControlTarget = 0
	ControlTarget_Cave   ControlTarget = 1
	ControlTarget_Both   ControlTarget = 2
)

// Enum value maps for ControlTarget.
var (
	ControlTarget_name = map[int32]string{
		0: "Master",
		1: "Cave",
		2: "Both",
	}
	ControlTarget_value = map[string]int32{
		"Master": 0,
		"Cave":   1,
		"Both":   2,
	}
)

func (x ControlTarget) Enum() *ControlTarget {
	p := new(ControlTarget)
	*p = x
	return p
}

func (x ControlTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_shard_proto_enumTypes[0].Descriptor()
}

func (ControlTarget) Type() protoreflect.EnumType {
	return &file_shard_proto_enumTypes[0]
}

func (x ControlTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlTarget.Descriptor instead.
func (ControlTarget) EnumDescriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{0}
}

type ServerState int32

const (
	ServerState_Running  ServerState = 0
	ServerState_Starting ServerState = 1
	ServerState_Stopping ServerState = 2
	ServerState_Stopped  ServerState = 3
)

// Enum value maps for ServerState.
var (
	ServerState_name = map[int32]string{
		0: "Running",
		1: "Starting",
		2: "Stopping",
		3: "Stopped",
	}
	ServerState_value = map[string]int32{
		"Running":  0,
		"Starting": 1,
		"Stopping": 2,
		"Stopped":  3,
	}
)

func (x ServerState) Enum() *ServerState {
	p := new(ServerState)
	*p = x
	return p
}

func (x ServerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerState) Descriptor() protoreflect.EnumDescriptor {
	return file_shard_proto_enumTypes[1].Descriptor()
}

func (ServerState) Type() protoreflect.EnumType {
	return &file_shard_proto_enumTypes[1]
}

func (x ServerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerState.Descriptor instead.
func (ServerState) EnumDescriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{1}
}

type ControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     ControlTarget `protobuf:"varint,1,opt,name=target,proto3,enum=shard.ControlTarget" json:"target,omitempty"`
	InstanceId *ContainerId  `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *ControlRequest) Reset() {
	*x = ControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRequest) ProtoMessage() {}

func (x *ControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRequest.ProtoReflect.Descriptor instead.
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{0}
}

func (x *ControlRequest) GetTarget() ControlTarget {
	if x != nil {
		return x.Target
	}
	return ControlTarget_Master
}

func (x *ControlRequest) GetInstanceId() *ContainerId {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

type CommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     ControlTarget `protobuf:"varint,1,opt,name=target,proto3,enum=shard.ControlTarget" json:"target,omitempty"`
	InstanceId *ContainerId  `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Command    string        `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{1}
}

func (x *CommandRequest) GetTarget() ControlTarget {
	if x != nil {
		return x.Target
	}
	return ControlTarget_Master
}

func (x *CommandRequest) GetInstanceId() *ContainerId {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *CommandRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type VersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResp) Reset() {
	*x = VersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResp) ProtoMessage() {}

func (x *VersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_shard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResp.ProtoReflect.Descriptor instead.
func (*VersionResp) Descriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{2}
}

func (x *VersionResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type LogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     ControlTarget `protobuf:"varint,1,opt,name=target,proto3,enum=shard.ControlTarget" json:"target,omitempty"`
	InstanceId *ContainerId  `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Lines      int64         `protobuf:"varint,3,opt,name=lines,proto3" json:"lines,omitempty"`
}

func (x *LogsRequest) Reset() {
	*x = LogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsRequest) ProtoMessage() {}

func (x *LogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsRequest.ProtoReflect.Descriptor instead.
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{3}
}

func (x *LogsRequest) GetTarget() ControlTarget {
	if x != nil {
		return x.Target
	}
	return ControlTarget_Master
}

func (x *LogsRequest) GetInstanceId() *ContainerId {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *LogsRequest) GetLines() int64 {
	if x != nil {
		return x.Lines
	}
	return 0
}

type LogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs string `protobuf:"bytes,1,opt,name=logs,proto3" json:"logs,omitempty"`
}

func (x *LogsResponse) Reset() {
	*x = LogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsResponse) ProtoMessage() {}

func (x *LogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsResponse.ProtoReflect.Descriptor instead.
func (*LogsResponse) Descriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{4}
}

func (x *LogsResponse) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

type StateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State ServerState `protobuf:"varint,1,opt,name=state,proto3,enum=shard.ServerState" json:"state,omitempty"`
}

func (x *StateResp) Reset() {
	*x = StateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateResp) ProtoMessage() {}

func (x *StateResp) ProtoReflect() protoreflect.Message {
	mi := &file_shard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateResp.ProtoReflect.Descriptor instead.
func (*StateResp) Descriptor() ([]byte, []int) {
	return file_shard_proto_rawDescGZIP(), []int{5}
}

func (x *StateResp) GetState() ServerState {
	if x != nil {
		return x.State
	}
	return ServerState_Running
}

var File_shard_proto protoreflect.FileDescriptor

var file_shard_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x1a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x73, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x33, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x27, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x86,
	0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x35, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2a, 0x2f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x43, 0x61, 0x76, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x6f, 0x74,
	0x68, 0x10, 0x02, 0x2a, 0x43, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x03, 0x32, 0xa4, 0x04, 0x0a, 0x0c, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x53,
	0x74, 0x6f, 0x70, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x04,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x32, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x2f, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x13,
	0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x13, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a,
	0x0e, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42,
	0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x73,
	0x74, 0x67, 0x6f, 0x2f, 0x77, 0x69, 0x67, 0x66, 0x72, 0x69, 0x64, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shard_proto_rawDescOnce sync.Once
	file_shard_proto_rawDescData = file_shard_proto_rawDesc
)

func file_shard_proto_rawDescGZIP() []byte {
	file_shard_proto_rawDescOnce.Do(func() {
		file_shard_proto_rawDescData = protoimpl.X.CompressGZIP(file_shard_proto_rawDescData)
	})
	return file_shard_proto_rawDescData
}

var file_shard_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_shard_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_shard_proto_goTypes = []interface{}{
	(ControlTarget)(0),     // 0: shard.ControlTarget
	(ServerState)(0),       // 1: shard.ServerState
	(*ControlRequest)(nil), // 2: shard.ControlRequest
	(*CommandRequest)(nil), // 3: shard.CommandRequest
	(*VersionResp)(nil),    // 4: shard.VersionResp
	(*LogsRequest)(nil),    // 5: shard.LogsRequest
	(*LogsResponse)(nil),   // 6: shard.LogsResponse
	(*StateResp)(nil),      // 7: shard.StateResp
	(*ContainerId)(nil),    // 8: daemon.ContainerId
	(*Notify)(nil),         // 9: result.Notify
}
var file_shard_proto_depIdxs = []int32{
	0,  // 0: shard.ControlRequest.target:type_name -> shard.ControlTarget
	8,  // 1: shard.ControlRequest.instanceId:type_name -> daemon.ContainerId
	0,  // 2: shard.CommandRequest.target:type_name -> shard.ControlTarget
	8,  // 3: shard.CommandRequest.instanceId:type_name -> daemon.ContainerId
	0,  // 4: shard.LogsRequest.target:type_name -> shard.ControlTarget
	8,  // 5: shard.LogsRequest.instanceId:type_name -> daemon.ContainerId
	1,  // 6: shard.StateResp.state:type_name -> shard.ServerState
	2,  // 7: shard.ShardService.Start:input_type -> shard.ControlRequest
	2,  // 8: shard.ShardService.ReStart:input_type -> shard.ControlRequest
	2,  // 9: shard.ShardService.Stop:input_type -> shard.ControlRequest
	2,  // 10: shard.ShardService.State:input_type -> shard.ControlRequest
	5,  // 11: shard.ShardService.Logs:input_type -> shard.LogsRequest
	3,  // 12: shard.ShardService.Execute:input_type -> shard.CommandRequest
	8,  // 13: shard.ShardService.Version:input_type -> daemon.ContainerId
	8,  // 14: shard.ShardService.Update:input_type -> daemon.ContainerId
	8,  // 15: shard.ShardService.RollBack:input_type -> daemon.ContainerId
	8,  // 16: shard.ShardService.Reset:input_type -> daemon.ContainerId
	8,  // 17: shard.ShardService.Clear:input_type -> daemon.ContainerId
	9,  // 18: shard.ShardService.Start:output_type -> result.Notify
	9,  // 19: shard.ShardService.ReStart:output_type -> result.Notify
	9,  // 20: shard.ShardService.Stop:output_type -> result.Notify
	7,  // 21: shard.ShardService.State:output_type -> shard.StateResp
	6,  // 22: shard.ShardService.Logs:output_type -> shard.LogsResponse
	9,  // 23: shard.ShardService.Execute:output_type -> result.Notify
	4,  // 24: shard.ShardService.Version:output_type -> shard.VersionResp
	9,  // 25: shard.ShardService.Update:output_type -> result.Notify
	9,  // 26: shard.ShardService.RollBack:output_type -> result.Notify
	9,  // 27: shard.ShardService.Reset:output_type -> result.Notify
	9,  // 28: shard.ShardService.Clear:output_type -> result.Notify
	18, // [18:29] is the sub-list for method output_type
	7,  // [7:18] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_shard_proto_init() }
func file_shard_proto_init() {
	if File_shard_proto != nil {
		return
	}
	file_result_proto_init()
	file_daemon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shard_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shard_proto_goTypes,
		DependencyIndexes: file_shard_proto_depIdxs,
		EnumInfos:         file_shard_proto_enumTypes,
		MessageInfos:      file_shard_proto_msgTypes,
	}.Build()
	File_shard_proto = out.File
	file_shard_proto_rawDesc = nil
	file_shard_proto_goTypes = nil
	file_shard_proto_depIdxs = nil
}
